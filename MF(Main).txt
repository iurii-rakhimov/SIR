// MF[Main].txt
Remove ExternalVariables
Remove AllVisualObject

^DelimiterSpace = IntToChar(40)
^DelimiterRecord = IntToChar(11)
^DelimiterTab = IntToChar(9)
^DelimiterNewLine = IntToChar(10)
^OrderSort = "MaxMin"
^DelimiterBag = IntToChar(128188) // üíº
^DelimiterCardIndexDividers = IntToChar(128450) // üóÇ
^DelimiterMagnifyingGlass = IntToChar(128269) // üîç
^DelimiterMemo = IntToChar(128221) // üìù
^Path = GetPathDirectoryDocument()
^Key = ""
^DateBegin = ""
^DateEnd = ""
^SaveRecord = "No"

Struct ^StructRecordSynchro { YearMonth, MaxInCloudID, Identifier, StrArrayRecords }
Struct ^StructRecord { Date, Order, NameKontragentOut, Summa, NameKontragentIn, Comment, Quantity, Price, ID }
Struct ^StructGeneral { NameKontragentIn, Date, Order, ID, Summa, NameKontragentOut, Comment, Quantity, Price, Selector }
Struct ^StructKontragent { NameKontragent, SummaKontragent, QuantityKontragent }
Struct ^StructSchet { NameSchet, SummaSchet }
Struct ^StructOperaciiKontragent { Date, Order, KontragentIn, SummaIn, KontragentOut, SummaOut, Comment, Quantity, Price, SummaFormatItogo, ID, Selector, ViewDate }

LoadModule  Function[Pyton].txt

LoadModule  Function[ShowMonth].txt
LoadModule  Function[GeneralBalance].txt
LoadModule  Function[SelectionListOperaciiKontragent].txt
LoadModule  Function[ViewSelectionListOperaciiKontragent].txt
LoadModule  Function[SaveRecord].txt
LoadModule  Function[TrashRecord].txt

LoadModule  Function[ErrorDate].txt
LoadModule  Function[ErrorWriteBaseData].txt
LoadModule  Function[ErrorWriteFile].txt

^Key = "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö"
^OrderSort = DataBaseReadDataForKey(^Key)
if ^OrderSort == ""
{
	^Data = "MaxMin"
	kv = DataBaseWriteDataForKey(^Key, ^Data)
	if kv != 0
	{
		DoModule ErrorWriteBaseData
	}
	OrderSort = ^Data
}

^Key = "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞"
DateBegin = DataBaseReadDataForKey(^Key)
if DateBegin == ""
{
	DateBegin = GetDate()
	arrayDateBegin = Components(DateBegin, "/")
	arrayDateBegin[0] = "01"
	DateBegin = Joined(arrayDateBegin, "/")
	^Data = DateBegin
	kv = DataBaseWriteDataForKey(^Key, ^Data)
	if kv != 0
	{
		DoModule ErrorWriteBaseData
	}
}
^DateBegin = DateBegin
DateBegin.text = ^DateBegin
View DateBegin

^Key = "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞"
DateEnd = DataBaseReadDataForKey(^Key)
Minus1=-1
Plus1=1
if DateEnd == ""
{
	DateEnd = GetDate()
	arrayDateEnd = Components(DateBegin, "/")
	arrayDateEnd[0] = ""
	DateEnd = Joined(arrayDateEnd, "/")
	DateEnd = GetDateNextMonth(DateEnd, Plus1)
	DateEnd = GetDateNextMonth(DateEnd, Minus1)
	^Data = DateEnd
	kv = DataBaseWriteDataForKey(^Key, ^Data)
	if kv != 0
	{
		DoModule ErrorWriteBaseData
	}
}
^DateEnd = DateEnd
DateEnd.text = ^DateEnd
View DateEnd

NameFile = ^Path + "MF_Comment.txt"
ContentFile = FileRead(NameFile)
^ArrayComment = Components(ContentFile, ^DelimiterNewLine)
